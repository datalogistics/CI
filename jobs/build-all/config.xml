<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>[ -e libunis-c ] || git clone https://github.com/periscope-ps/libunis-c.git
[ -e toolkit ] || git clone https://github.com/datalogistics/toolkit.git
[ -e ibp_server ] || git clone https://github.com/datalogistics/ibp_server.git
# :(
[ -e xsp.tgz ] || wget http://damsl.cs.indiana.edu/yum/xsp.tgz
[ -e xsp ] || tar -xvf xsp.tgz
[ -e libxsp-1.0 ] || cp -a xsp libxsp-1.0
[ -e libxsp.tgz ] || tar -cvzf libxsp.tgz libxsp-1.0

[ -e jenkins-publish-rpm.sh ] || curl -o jenkins-publish-rpm.sh https://github.com/spohnan/jenkins-rpm-publish/raw/master/SOURCES/jenkins-rpm-publish/usr/local/bin/jenkins-publish-rpm.sh

rm -rf RPMS SRPMS
mkdir -p BUILD RPMS SOURCES SPECS SRPMS
TARGET=`pwd`/SOURCES/ibp_server.tar.gz
pushd /vagrant_data
tar --exclude .git -czf $TARGET ibp_server
popd
tar --exclude .git -czf SOURCES/libunis-c.tar.gz libunis-c
cp libxsp.tgz SOURCES/libxsp-1.0.tar.gz

sudo yum install -y `grep BuildRequires /vagrant_data/RPM/* | awk &apos;{ $1=&quot;&quot;; print }&apos; | tr &apos;,&apos; &apos; &apos; | xargs echo `

BUILD_ORDER=&quot;libunis-c libxsp accre-ibp-server dlt&quot;
#BUILD_ORDER=&quot;accre-ibp-server&quot;

#for CURRENT in $BUILD_ORDER; do
#    sudo rpm -e --nodeps ${CURRENT} || true
#done
#sudo rpm -e --nodeps  libxsp-common || true
#sudo rpm -e --nodeps  libxsp-client || true
#sudo rpm -e --nodeps  libxsp-xspd || true
#sudo rpm -e --nodeps  libxsp-xspd libxsp-client libxsp-common libxsp 
#sudo rpm -e libunis-c accre-ibp-server-phoebus dlt || true

RELEASE_TIME=$(date +%Y%m%d%H%M%S)
for CURRENT in $BUILD_ORDER; do
    # hack while this doesn&apos;t build right
    #LIB_PATH=&quot;/usr/local/lib/&quot;
    #ls -lah ${LIB_PATH}/libxsp_client*
    #sudo cp ${LIB_PATH}/libxsp_client* /usr/local/lib/ || true
    #sudo cp ${LIB_PATH}/libxsp_client* /usr/lib64/ || true
    #pushd xsp
    #sudo make install
    #popd
    rpmbuild \
        --define &quot;_topdir `pwd`&quot; \
        --define &quot;release ${RELEASE_TIME}&quot; \
        -ba /vagrant_data/RPM/${CURRENT}.spec
    # sudo rpm -i `ls RPMS/*/${CURRENT}* | grep -v debuginfo`
done

RPM_VERSIONS_TO_KEEP=3
RPM_REPO_BASE=/var/www/html/repos/centos/6/custom
RPM_NAME=jenkins-rpm-publish-*.rpm</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*RPMS/</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.BuildTrigger>
      <childProjects>install-dlt</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>